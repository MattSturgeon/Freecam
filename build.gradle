plugins {
    id 'java'
    id 'xyz.wagyourtail.unimined' version '1.1.0'
}

group 'net.xolt.freecam'
version '1.2.1.1'

base {
    archivesName = "freecam"
}

// this is just here so we can test the outputs easier and clean between tests
unimined.useGlobalCache = false

sourceSets {
    fabric
    neoforge
    lexforge
}

repositories {
    mavenCentral()
    maven {
        name = "sponge"
        url = "https://repo.spongepowered.org/maven"
    }
    maven {
        name = "terraformers"
        url = "https://maven.terraformersmc.com"
    }
}

unimined.minecraft {
    version project.minecraft_version

    mappings {
        intermediary()
        mojmap()
        parchment("1.19.3", "2023.03.12-nightly-SNAPSHOT")

        devFallbackNamespace "intermediary"
    }

    defaultRemapJar = false
}

unimined.minecraft(sourceSets.fabric) {
    combineWith(sourceSets.main)

    fabric {
        loader project.fabric_loader_version
    }

    defaultRemapJar = true
}

unimined.minecraft(sourceSets.neoforge) {
    combineWith(sourceSets.main)

    neoForged {
        loader project.neoforge_version
        mixinConfig "freecam.mixins.json"
    }

    minecraftRemapper.config {
        // neoforge adds 1 conflict, where 2 interfaces have a method with the same name on yarn/mojmap,
        // but the method has different names in the intermediary mappings.
        // this is a conflict because they have a class that extends both interfaces.
        // this shouldn't be a problem as long as named mappings don't make the name of those 2 methods different.
        ignoreConflicts(true)
    }

    defaultRemapJar = true
}

unimined.minecraft(sourceSets.lexforge) {
    combineWith(sourceSets.main)
    version project.minecraft_version

    mappings {
        intermediary()
        mojmap()
        parchment("1.19.3", "2023.03.12-nightly-SNAPSHOT")

        devFallbackNamespace "intermediary"
    }

    minecraftForge {
        loader project.lexforge_version
        mixinConfig "freecam.mixins.json"
    }

    minecraftRemapper.config {
        ignoreConflicts(true)
    }
}

configurations {
    mainImplementation
}


dependencies {
    // we need this in main where it isn't by default
    implementation "org.spongepowered:mixin:0.8.5-SNAPSHOT"

    fabricModImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}+${project.minecraft_version}"
    fabricModImplementation ("com.terraformersmc:modmenu:${project.modmenu_version}") {
        exclude module: "fabric-api"
    }
}

jar {
    enabled = false
}

processFabricResources {
    inputs.property "version", project.version

    filesMatching("freecam.mod.json") {
        expand "version": project.version
    }
}

processNeoforgeResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }

    filesMatching("assets/freecam/icon.png") {
        it.path = "icon.png"
    }
}

processLexforgeResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }

    filesMatching("assets/freecam/icon.png") {
        it.path = "icon.png"
    }
}